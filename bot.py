# bot.py
import os
import logging
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º .env (–µ—Å–ª–∏ –µ—Å—Ç—å)
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.getenv("TELEGRAM_TOKEN")
if not TOKEN:
    raise RuntimeError("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_TOKEN –≤ Secrets (Replit)")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–π –±–æ—Ç.\n"
        "–ó–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å ‚Äî —Å–∫–æ—Ä–æ –Ω–∞—É—á—É—Å—å –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –æ—Å–Ω–æ–≤–µ –∑–Ω–∞–Ω–∏–π."
    )

# –í—Ä–µ–º–µ–Ω–Ω—ã–π echo
async def echo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    logger.info(f"–ü–æ–ª—É—á–µ–Ω–æ: {text}")
    await update.message.reply_text(
        f"üì© –Ø –ø–æ–ª—É—á–∏–ª: *{text}*\n\n"
        "–°–∫–æ—Ä–æ —è –Ω–∞—á–Ω—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–∏–ª–æ—Å–æ—Ñ—Å–∫–∏–µ —Ç–µ–∫—Å—Ç—ã.",
        parse_mode='Markdown'
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))

    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.")
    app.run_polling()

if __name__ == "__main__":
    main()